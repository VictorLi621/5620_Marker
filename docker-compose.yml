

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: intelligent-marker-db
    environment:
      POSTGRES_DB: grading_system
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: intelligent-marker-backend
    ports:
      - "8080:8080"
    env_file:
      - .env.example  # Default values
      - .env.local    # Local overrides (highest priority, not in git)
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/grading_system
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: password
      TZ: Australia/Sydney  # Set timezone to Sydney time (AEDT/AEST)
      # OPENAI_API_KEY and other secrets will be read from .env.local
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # React frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: intelligent-marker-frontend
    ports:
      - "8081:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      REACT_APP_API_URL: http://localhost:8080

volumes:
  postgres_data:

